# export const typeDefs = `#graphql
scalar Date

type User {
  id: String
  email: String
  password: String
}

type Auth {
  id: String
  email: String
}

type Profile {
  id: String
  firstName: String
  lastName: String
  location: String
  occupation: String
  gender: String
  birthday: Date
  profilePicture: String
  profileCompleted: Boolean
  posts: [Post!]
}

type Post {
  id: String
  profileId: String
  description: String
  createDate: Date
  modifyDate: Date
  profile: Profile
  comments: [Comment]
  likes: [Like]
}

type Comment {
  id: String
  profile: Profile
  post: Post
  description: String
  createDate: Date
  modifyDate: Date
}

type Like {
  id: String
  profile: Profile
  post: Post
}

type Follow {
  profileId: String
  followerId: String
}

type Query {
  userProfile: Profile
  profile(profileId: String!): Profile
  profiles: [Profile]
  posts: [Post!]
  followingPosts(profileId: String!): [Post!]
}

type Mutation {
  signUp(email: String!, password: String!): Auth!
  login(email: String!, password: String!): Auth!
  logout: Auth
  createProfile(
    firstName: String!
    lastName: String!
    location: String!
    occupation: String!
    gender: String!
    birthday: Date!
  ): Profile!
  completeProfile(profilePicture: String!): Profile!
  updateProfile(
    firstName: String
    lastName: String
    location: String
    occupation: String
    gender: String
    birthday: Date
    profilePicture: String
  ): Profile!
  createPost(profileId: String!, description: String!): Post!
}
# `;
